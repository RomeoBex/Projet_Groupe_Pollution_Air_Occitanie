[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Pollution en Occitanie",
    "section": "",
    "text": "L’industrie et la pollution sont souvent liées en raison des processus de production qui peuvent entraîner des émissions de substances polluantes dans l’air, l’eau et le sol."
  },
  {
    "objectID": "Diag_Gantt/diag_gantt.html",
    "href": "Diag_Gantt/diag_gantt.html",
    "title": "Météo",
    "section": "",
    "text": "``` mermaid\ngantt title Exemple de Diagramme de Gantt dateFormat YYYY-MM-DD title Diagramme de Gantt axisFormat %d-%m\nsection Dates importantes\nFin du projet :crit, 2023-12-10, 5d\nPrésentation Orale :crit, 2023-12-15, 8d\n\n\nsection Repository\nCréation de contenu : a3, 2023-10-07, 10d\nAjout d'un Readme : a4, 2023-10-17, 7d\nAjout de index html : a5, 2023-10-24, 10d\n\nsection Pages web\nCréation de la page web : a6, 2023-10-31, 10d\nAjout de la carte : a7, 2023-11-08, 12d\nAjout d'interactivité : a8, 2023-11-18, 22d\nEmbellissement de la page : a9, 2023-11-01, 30d"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Intéractivité",
    "section": "",
    "text": "Carte pour se donner une idée du nombre d’habitant et de la densité.\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\nEn passant la souris sur les différents pointeurs on a le taux moyen de pollution des 5 principaux polluants.\n\n\nC:\\Users\\romeo\\anaconda3\\lib\\site-packages\\jupyter_client\\session.py:718: UserWarning:\n\nMessage serialization failed with:\nOut of range float values are not JSON compliant\nSupporting this message is deprecated in jupyter-client 7, please make sure your message is JSON-compliant\n\n\n\n\n\n\nCarte interactive des mesures mensuelles de la région Occitanie des principaux polluants en microgramme par mètre cube"
  },
  {
    "objectID": "carte_interactive.html",
    "href": "carte_interactive.html",
    "title": "Carte intéractive",
    "section": "",
    "text": "#Carte interactive \nfrom ipyleaflet import Map, TileLayer, basemaps\n\n# Remplacez l'URL par le service WMTS que vous souhaitez utiliser\nwmts_url = \"https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/WMTS\"\n\n# Créer une carte avec le service WMTS\ncarte = Map(center=(43.611015, 3.876733), zoom=12)\n\n# Ajouter une couche WMTS à la carte\nwmts_layer = TileLayer(url=wmts_url, name=\"WMTS Layer\")\ncarte.add_layer(wmts_layer)\n\n# Afficher la carte\ncarte"
  },
  {
    "objectID": "about2.html",
    "href": "about2.html",
    "title": "Données météos",
    "section": "",
    "text": "import requests\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom datetime import datetime, timedelta\nimport random\n\n# Remplacez le nom du jeu de données (dataset-name) et les filtres (facet et refine) par les valeurs appropriées\nurl_api = \"https://public.opendatasoft.com/api/records/1.0/search/?dataset=donnees-synop-essentielles-omm&rows=100&facet=nom_reg&refine.nom_reg=Occitanie\"\n\n# Faites la requête API\nresponse = requests.get(url_api)\ndata = response.json()\n\n# Créer un DataFrame à partir des données\ndf = pd.DataFrame([record['fields'] for record in data['records']])\n\n# Ajout d'une colonne temporelle pour la démonstration (à remplacer par votre propre colonne)\ndf['datetime'] = [datetime.now() - timedelta(days=random.randint(1, 365)) for _ in range(len(df))]\n\n# Convertir la colonne 'datetime' en format datetime\ndf['datetime'] = pd.to_datetime(df['datetime'])\n\n# Vérifier la structure des données\nprint(df.head())\n\n# Représentation graphique\nif 'temps_present' in df.columns:\n    plt.figure(figsize=(12, 6))\n    plt.plot(df['datetime'], df['temps_present'], marker='o', linestyle='-')\n    plt.title('Représentation Temporelle du Dataset')\n    plt.xlabel('Date et Heure')\n    plt.ylabel('Temps Présent')\n    plt.xticks(rotation=45)\n    plt.tight_layout()\n    plt.show()\nelse:\n    print(\"La colonne 'temps_present' n'est pas présente dans le DataFrame.\")\n\n   tminsolc  rafper code_dep            libgeo    pmer  code_epci       t ww  \\\n0       8.5     4.8       66         Perpignan  102150  200027183  290.95  0   \n1       NaN     7.7       12            Millau  101890  241200567  289.75  0   \n2       8.5     5.1       65             Louey  101720  200069300  295.05  0   \n3       6.9     7.8       31           Blagnac  101840  243100518  293.75  0   \n4       3.7     8.2       09  Lorp-Sentaraille  102240  200067940  295.85  0   \n\n   ht_neige numer_sta  ...  nnuage1 hbas hnuage2  hnuage1 nnuage2 nnuage3  \\\n0       0.0     07747  ...      NaN  NaN     NaN      NaN     NaN     NaN   \n1       0.0     07558  ...      NaN  NaN     NaN      NaN     NaN     NaN   \n2       0.0     07621  ...      NaN  NaN     NaN      NaN     NaN     NaN   \n3       0.0     07630  ...      NaN  NaN     NaN      NaN     NaN     NaN   \n4       0.0     07627  ...      NaN  NaN     NaN      NaN     NaN     NaN   \n\n   ctype4  hnuage3  ctype3                   datetime  \n0     NaN      NaN     NaN 2023-05-17 16:20:37.138018  \n1     NaN      NaN     NaN 2023-01-02 16:20:37.138018  \n2     NaN      NaN     NaN 2023-05-01 16:20:37.138018  \n3     NaN      NaN     NaN 2022-11-28 16:20:37.138018  \n4     NaN      NaN     NaN 2022-12-31 16:20:37.138018  \n\n[5 rows x 59 columns]"
  },
  {
    "objectID": "about.html#code-python-pour-la-carte-interactive",
    "href": "about.html#code-python-pour-la-carte-interactive",
    "title": "Carte interactive des mesures mensuelles de la région Occitanie des principaux polluants en microgramme par mètre cube",
    "section": "",
    "text": "```python import pandas as pd from ipyleaflet import Map, TileLayer, GeoJSON, Marker import ipywidgets as widgets from IPython.display import display"
  },
  {
    "objectID": "about.html#résultats-du-calcul-de-la-moyenne-de-pollution-de-lécart-type-ainsi-que-le-seuil",
    "href": "about.html#résultats-du-calcul-de-la-moyenne-de-pollution-de-lécart-type-ainsi-que-le-seuil",
    "title": "Carte intéractive",
    "section": "Résultats du calcul de la moyenne de pollution, de l’écart type ainsi que le seuil",
    "text": "Résultats du calcul de la moyenne de pollution, de l’écart type ainsi que le seuil\n\n#pour calculer la valeur seuil \n# Calculer la moyenne et l'écart type des valeurs de pollution\nmoyenne_pollution = df['valeur'].mean()\necart_type_pollution = df['valeur'].std()\n\n# Définir le seuil comme la moyenne plus 2 fois l'écart type\nseuil_valeur_elevee = moyenne_pollution + 2 * ecart_type_pollution\n\nprint(\"Moyenne de la pollution:\", moyenne_pollution)\nprint(\"Écart type de la pollution:\", ecart_type_pollution)\nprint(\"Seuil de valeur élevée:\", seuil_valeur_elevee)\n\nMoyenne de la pollution: 23.731417458945568\nÉcart type de la pollution: 25.289153037830907\nSeuil de valeur élevée: 74.30972353460739"
  },
  {
    "objectID": "about.html#résultats-moyenne-écart-typé-valeur-max",
    "href": "about.html#résultats-moyenne-écart-typé-valeur-max",
    "title": "Intéractivité",
    "section": "Résultats moyenne, écart typé, valeur max",
    "text": "Résultats moyenne, écart typé, valeur max\n\n# Calculer la moyenne et l'écart type des valeurs de pollution\nmoyenne_pollution = df['valeur'].mean()\necart_type_pollution = df['valeur'].std()\n\n# Définir le seuil comme la moyenne plus 2 fois l'écart type\nseuil_valeur_elevee = moyenne_pollution + 2 * ecart_type_pollution\n\nprint(\"Moyenne de la pollution:\", moyenne_pollution)\nprint(\"Écart type de la pollution:\", ecart_type_pollution)\nprint(\"Valeur la plus élevée:\", seuil_valeur_elevee)\n\nMoyenne de la pollution: 23.731417458945568\nÉcart type de la pollution: 25.289153037830907\nValeur la plus élevée: 74.30972353460739"
  },
  {
    "objectID": "about.html#valeursde-pollution-polluants",
    "href": "about.html#valeursde-pollution-polluants",
    "title": "Intéractivité",
    "section": "",
    "text": "import pandas as pd\nfrom ipyleaflet import Map, TileLayer, GeoJSON, Marker\nimport ipywidgets as widgets\nfrom IPython.display import display\n\n# Charger le fichier CSV dans un DataFrame\nchemin_fichier_csv = 'Mesure_mensuelle_Region_Occitanie_Polluants_Principaux.csv'\ndf = pd.read_csv(chemin_fichier_csv)\n\n# Créer une colonne 'geometry' avec les coordonnées X et Y sous forme de GeoJSON\ndf['geometry'] = df.apply(lambda row: {\"type\": \"Point\", \"coordinates\": [row['X'], row['Y']]}, axis=1)\n\n# Valeur seuil\nSEUIL_DE_VALEUR_ELEVEE = 23.7  # Définissez votre seuil ici\n\n# Créer une carte avec le service WMTS\ncarte = Map(center=(43.611015, 3.876733), zoom=9)\n\n# Ajouter une couche WMTS à la carte\nwmts_url = \"https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/WMTS\"\nwmts_layer = TileLayer(url=wmts_url, name=\"WMTS Layer\")\ncarte.add_layer(wmts_layer)\n\n# Créer une GeoJSON FeatureCollection à partir des données de votre DataFrame\ngeojson_data = {\n    \"type\": \"FeatureCollection\",\n    \"features\": []\n}\n\n# Marqueurs pour les valeurs élevées\nhigh_value_markers = []\n\nfor index, row in df.iterrows():\n    feature = {\n        \"type\": \"Feature\",\n        \"geometry\": row['geometry'],\n        \"properties\": {\"nom_dept\": row['nom_dept'], \"valeur\": row['valeur']}\n    }\n    geojson_data['features'].append(feature)\n\n    # Ajouter un marqueur si la valeur de pollution est élevée\n    if row['valeur'] &gt; SEUIL_DE_VALEUR_ELEVEE:\n        marker = Marker(location=(row['Y'], row['X']), draggable=False, title=f\"Valeur: {row['valeur']}\")\n        high_value_markers.append(marker)\n\n# Créer une couche GeoJSON pour les zones polluées\ngeojson_layer = GeoJSON(data=geojson_data, style={'color': 'red', 'opacity': 0.8, 'weight': 1.5})\ncarte.add_layer(geojson_layer)\n\n# Ajouter les marqueurs à la carte\n# Ajouter les marqueurs à la carte\nfor marker in high_value_markers:\n    carte.add_layer(marker)\n\n\n\n# Afficher la carte \ndisplay(widgets.HBox([carte]))\n\nC:\\Users\\romeo\\anaconda3\\lib\\site-packages\\jupyter_client\\session.py:718: UserWarning:\n\nMessage serialization failed with:\nOut of range float values are not JSON compliant\nSupporting this message is deprecated in jupyter-client 7, please make sure your message is JSON-compliant\n\n\n\n\n\n\nCarte interactive des mesures mensuelles de la région Occitanie des principaux polluants en microgramme par mètre cube"
  },
  {
    "objectID": "about.html#valeurs-de-pollution-polluants",
    "href": "about.html#valeurs-de-pollution-polluants",
    "title": "Intéractivité",
    "section": "",
    "text": "import pandas as pd\nfrom ipyleaflet import Map, TileLayer, GeoJSON, Marker\nimport ipywidgets as widgets\nfrom IPython.display import display\n\n# Charger le fichier CSV dans un DataFrame\nchemin_fichier_csv = 'Mesure_mensuelle_Region_Occitanie_Polluants_Principaux.csv'\ndf = pd.read_csv(chemin_fichier_csv)\n\n# Créer une colonne 'geometry' avec les coordonnées X et Y sous forme de GeoJSON\ndf['geometry'] = df.apply(lambda row: {\"type\": \"Point\", \"coordinates\": [row['X'], row['Y']]}, axis=1)\n\n# Valeur seuil\nSEUIL_DE_VALEUR_ELEVEE = 23.7  # Définissez votre seuil ici\n\n# Créer une carte avec le service WMTS\ncarte = Map(center=(43.611015, 3.876733), zoom=9)\n\n# Ajouter une couche WMTS à la carte\nwmts_url = \"https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/WMTS\"\nwmts_layer = TileLayer(url=wmts_url, name=\"WMTS Layer\")\ncarte.add_layer(wmts_layer)\n\n# Créer une GeoJSON FeatureCollection à partir des données de votre DataFrame\ngeojson_data = {\n    \"type\": \"FeatureCollection\",\n    \"features\": []\n}\n\n# Marqueurs pour les valeurs élevées\nhigh_value_markers = []\n\nfor index, row in df.iterrows():\n    feature = {\n        \"type\": \"Feature\",\n        \"geometry\": row['geometry'],\n        \"properties\": {\"nom_dept\": row['nom_dept'], \"valeur\": row['valeur']}\n    }\n    geojson_data['features'].append(feature)\n\n    # Ajouter un marqueur si la valeur de pollution est élevée\n    if row['valeur'] &gt; SEUIL_DE_VALEUR_ELEVEE:\n        marker = Marker(location=(row['Y'], row['X']), draggable=False, title=f\"Valeur: {row['valeur']}\")\n        high_value_markers.append(marker)\n\n# Créer une couche GeoJSON pour les zones polluées\ngeojson_layer = GeoJSON(data=geojson_data, style={'color': 'red', 'opacity': 0.8, 'weight': 1.5})\ncarte.add_layer(geojson_layer)\n\n# Ajouter les marqueurs à la carte\n# Ajouter les marqueurs à la carte\nfor marker in high_value_markers:\n    carte.add_layer(marker)\n\n\n\n# Afficher la carte \ndisplay(widgets.HBox([carte]))\n\nC:\\Users\\romeo\\anaconda3\\lib\\site-packages\\jupyter_client\\session.py:718: UserWarning:\n\nMessage serialization failed with:\nOut of range float values are not JSON compliant\nSupporting this message is deprecated in jupyter-client 7, please make sure your message is JSON-compliant\n\n\n\n\n\n\nCarte interactive des mesures mensuelles de la région Occitanie des principaux polluants en microgramme par mètre cube"
  },
  {
    "objectID": "diapositives/diap.html#getting-up",
    "href": "diapositives/diap.html#getting-up",
    "title": "Projets Pollution",
    "section": "Getting up",
    "text": "Getting up\n\nTurn off alarm\nGet out of bed"
  },
  {
    "objectID": "diapositives/diap.html#breakfast",
    "href": "diapositives/diap.html#breakfast",
    "title": "Projets Pollution",
    "section": "Breakfast",
    "text": "Breakfast\n\nEat eggs\nDrink coffee"
  },
  {
    "objectID": "diapositives/diap.html#dinner",
    "href": "diapositives/diap.html#dinner",
    "title": "Projets Pollution",
    "section": "Dinner",
    "text": "Dinner\n\nEat spaghetti\nDrink wine"
  },
  {
    "objectID": "diapositives/diap.html#going-to-sleep",
    "href": "diapositives/diap.html#going-to-sleep",
    "title": "Projets Pollution",
    "section": "Going to sleep",
    "text": "Going to sleep\n\nGet in bed\nCount sheep"
  },
  {
    "objectID": "diapositives/diap.html#objets-détudes-et-source",
    "href": "diapositives/diap.html#objets-détudes-et-source",
    "title": "Projets Pollution",
    "section": "Objets d’études et source",
    "text": "Objets d’études et source\n\n\nSources :"
  },
  {
    "objectID": "diapositives/diap.html#code",
    "href": "diapositives/diap.html#code",
    "title": "Projets Pollution",
    "section": "Code",
    "text": "Code\n\nEat eggs\nDrink coffee"
  },
  {
    "objectID": "diapositives/diap.html#compréhension-du-phénomène",
    "href": "diapositives/diap.html#compréhension-du-phénomène",
    "title": "Projet Pollution",
    "section": "Compréhension du phénomène :",
    "text": "Compréhension du phénomène :"
  },
  {
    "objectID": "diapositives/diap.html#technicité-et-source",
    "href": "diapositives/diap.html#technicité-et-source",
    "title": "Projet Pollution",
    "section": "Technicité et source",
    "text": "Technicité et source\n\n\nBibilothèques :\n\npandas\nmatplotlib\nseaborn\nos\ngeojson\n\nDiapositives : Quarto\nSources : données SYNOP et Atmo Occitanie"
  },
  {
    "objectID": "diapositives/diap.html#comment-est-ce-quon-a-fait",
    "href": "diapositives/diap.html#comment-est-ce-quon-a-fait",
    "title": "Projet Pollution",
    "section": "Comment est-ce qu’on a fait ?",
    "text": "Comment est-ce qu’on a fait ?\nExemple sur un jeu de données :\n\n\n\n\n\n\nPandas\nImage d’un data frame\ntri"
  },
  {
    "objectID": "diapositives/diap.html#slide-title",
    "href": "diapositives/diap.html#slide-title",
    "title": "Projet Pollution",
    "section": "Slide Title",
    "text": "Slide Title\n\nCette diapo est un test"
  },
  {
    "objectID": "diapositives/diap.html#background-colorblue-background-size500px-background-opacity-0.2",
    "href": "diapositives/diap.html#background-colorblue-background-size500px-background-opacity-0.2",
    "title": "Projets Pollution",
    "section": "{background-color=“blue” background-size=“500px” background opacity = “0.2” }",
    "text": "{background-color=“blue” background-size=“500px” background opacity = “0.2” }"
  },
  {
    "objectID": "diapositives/diap.html#section",
    "href": "diapositives/diap.html#section",
    "title": "Projets Pollution",
    "section": "",
    "text": "Cette diapo est un test"
  },
  {
    "objectID": "diapositives/diap.html#projets-pollution",
    "href": "diapositives/diap.html#projets-pollution",
    "title": "Projet Pollution",
    "section": "Projets Pollution",
    "text": "Projets Pollution\n\nCette diapo est un test"
  },
  {
    "objectID": "diapositives/diap.html#projet-pollution",
    "href": "diapositives/diap.html#projet-pollution",
    "title": "Projet Pollution",
    "section": "Projet Pollution",
    "text": "Projet Pollution\n\nCette diapo est un test"
  },
  {
    "objectID": "diapositives/diap.html#title",
    "href": "diapositives/diap.html#title",
    "title": "Projet Pollution",
    "section": "title",
    "text": "title\n\ndiapo test"
  },
  {
    "objectID": "diapositives/diap.html#title-background-colorff998c-background-opacity0.2",
    "href": "diapositives/diap.html#title-background-colorff998c-background-opacity0.2",
    "title": "Projet Pollution",
    "section": "title {background-color=“#FF998C”, background-opacity=“0.2”}",
    "text": "title {background-color=“#FF998C”, background-opacity=“0.2”}\n\ndiapo test"
  },
  {
    "objectID": "diapositives/diap.html#résultat",
    "href": "diapositives/diap.html#résultat",
    "title": "Projet Pollution",
    "section": "Résultat :",
    "text": "Résultat :"
  },
  {
    "objectID": "functions/exploration.html",
    "href": "functions/exploration.html",
    "title": "Pollution Occitanie",
    "section": "",
    "text": "%load_ext autoreload\n%autoreload 2\n\n\nimport requests\nimport numpy as np\nimport pandas as pd\nfrom datetime import datetime as dt\nimport matplotlib.pyplot as plt\n\nimport dataprep as dp\nimport visuals as viz\n\n\ntj = \"https://services9.arcgis.com/7Sr9Ek9c1QTKmbwr/arcgis/rest/services/Mesure_horaire_(30j)_Region_Occitanie_Polluants_Reglementaires_1/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\"\nmensuelle = \"https://services9.arcgis.com/7Sr9Ek9c1QTKmbwr/arcgis/rest/services/mesures_occitanie_mensuelle_poll_princ/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\"\nresponse = requests.get(mensuelle)\nm = response.json()\n\n\ntj = \"https://services9.arcgis.com/7Sr9Ek9c1QTKmbwr/arcgis/rest/services/Mesure_horaire_(30j)_Region_Occitanie_Polluants_Reglementaires_1/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\"\nresponse = requests.get(tj)\nj = response.json()\n\n\nj.keys()\n\ndict_keys(['objectIdFieldName', 'uniqueIdField', 'globalIdFieldName', 'geometryType', 'spatialReference', 'fields', 'exceededTransferLimit', 'features'])\n\n\n\nnoms=[]\nfor element in j[\"features\"]:\n    noms+=[element.get('attributes').get('nom_com')]\nu_noms=np.unique(noms)\nfor u in u_noms:\n    print(f\"{u} {noms.count(u)}\" )\n\nAGDE 79\nALBI 4\nALES 12\nARGELES-GAZOST 3\nAUCH 105\nBELESTA-EN-LAURAGAIS 7\nBEZIERS 52\nBLAGNAC 9\nCASTRES 27\nCORNEILHAN 22\nGAUDONVILLE 27\nLA CALMETTE 23\nLATTES 19\nLOURDES 28\nLUNEL-VIEL 6\nMIRAMONT-DE-COMMINGES 5\nMONTAUBAN 14\nMONTGISCARD 11\nMONTPELLIER 278\nNIMES 16\nPERPIGNAN 93\nPEYRUSSE-VIEILLE 13\nRODEZ 21\nSAINT-GAUDENS 3\nSAINT-GELY-DU-FESC 14\nSAINT-GIRONS 3\nSAZE 13\nTARBES 18\nTOULOUSE 75\n\n\n\nj[\"features\"][2]\n\n{'attributes': {'nom_dept': 'TARN-ET-GARONNE',\n  'nom_com': 'MONTAUBAN',\n  'insee_com': 82121,\n  'nom_station': 'Montauban - Ramierou Urbain',\n  'code_station': 'FR50060',\n  'typologie': 'Urbaine',\n  'influence': 'Fond',\n  'nom_poll': 'NOX',\n  'id_poll_ue': 9,\n  'valeur': 6.7,\n  'unite': 'ug.m-3',\n  'metrique': 'horaire',\n  'date_debut': 1700913600000,\n  'date_fin': 1700917200000,\n  'statut_valid': 't',\n  'x_l93': 569728,\n  'y_l93': 6325102,\n  'ObjectId': 3},\n 'geometry': {'x': 1.3753099999999996, 'y': 44.01289999999996}}\n\n\n\nj[\"features\"][9]\n\n{'attributes': {'nom_dept': 'PYRENEES-ORIENTALES',\n  'nom_com': 'PERPIGNAN',\n  'insee_com': 66136,\n  'nom_station': 'Perpignan-Pyrenees Trafic',\n  'code_station': 'FR50224',\n  'typologie': 'Urbaine',\n  'influence': 'Trafic',\n  'nom_poll': 'NOX',\n  'id_poll_ue': 9,\n  'valeur': 58.5,\n  'unite': 'ug.m-3',\n  'metrique': 'horaire',\n  'date_debut': 1699819200000,\n  'date_fin': 1699822800000,\n  'statut_valid': 't',\n  'x_l93': 690848,\n  'y_l93': 6177376,\n  'ObjectId': 10},\n 'geometry': {'x': 2.8884499999999997, 'y': 42.695899999999995}}\n\n\n\ncities=[]\nstarts=[]\nends=[]\nval=[]\npoll_ue=[]\nfor element in j[\"features\"]:\n    cities+=[element.get('attributes').get('nom_com')]\n    starts+=[element.get('attributes').get('date_debut')]\n    ends+=[element.get('attributes').get('date_fin')]\n    val+=[element.get('attributes').get('valeur')]\n    poll_ue+=[element.get('attributes').get('id_poll_ue')]\ncities_u=np.unique(cities)\n\ndf_data = pd.DataFrame()\ndf_data['city']=cities\ndf_data['start']=starts\ndf_data['end']=ends\ndf_data['values']=val\ndf_data['poll_ue']=poll_ue\n    \n\n\n\ndf = pd.DataFrame(index=cities_u)\n\n\ndf_data['start'].apply(lambda x: dt.fromtimestamp(x/1e3))\n\n0     2023-11-25 10:00:00\n1     2023-11-25 12:00:00\n2     2023-11-25 13:00:00\n3     2023-11-25 14:00:00\n4     2023-11-25 15:00:00\n              ...        \n995   2023-11-13 12:00:00\n996   2023-11-15 11:00:00\n997   2023-11-16 19:00:00\n998   2023-11-19 07:00:00\n999   2023-11-21 13:00:00\nName: start, Length: 1000, dtype: datetime64[ns]\n\n\n\ndt.fromtimestamp(1699873200000/1e3)\n\ndatetime.datetime(2023, 11, 13, 12, 0)\n\n\n\ndf_m = dp.extract_data_to_df(data=m)\ndf_j = dp.extract_data_to_df(data=j)\n\n\ndf_j[df_j['city']==\"MONTPELLIER\"]\n\n\n\n\n\n\n\n\ncity\nstart\nend\nvalues\npoll_ue\nnom_poll\ninfluence\ntypology\n\n\n\n\n134\nMONTPELLIER\n2023-11-14 04:00:00\n2023-11-14 05:00:00\n72.5\n9\nNOX\nTrafic\nUrbaine\n\n\n135\nMONTPELLIER\n2023-11-14 08:00:00\n2023-11-14 09:00:00\n585.9\n9\nNOX\nTrafic\nUrbaine\n\n\n136\nMONTPELLIER\n2023-11-14 11:00:00\n2023-11-14 12:00:00\n182.5\n9\nNOX\nTrafic\nUrbaine\n\n\n137\nMONTPELLIER\n2023-11-14 12:00:00\n2023-11-14 13:00:00\n144.4\n9\nNOX\nTrafic\nUrbaine\n\n\n138\nMONTPELLIER\n2023-11-14 13:00:00\n2023-11-14 14:00:00\n186.9\n9\nNOX\nTrafic\nUrbaine\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n924\nMONTPELLIER\n2023-11-02 04:00:00\n2023-11-02 05:00:00\n6.8\n8\nNO2\nTrafic\nUrbaine\n\n\n952\nMONTPELLIER\n2023-11-02 05:00:00\n2023-11-02 06:00:00\n12.0\n5\nPM10\nFond\nUrbaine\n\n\n970\nMONTPELLIER\n2023-11-02 05:00:00\n2023-11-02 06:00:00\n10.9\n5\nPM10\nTrafic\nUrbaine\n\n\n986\nMONTPELLIER\n2023-11-02 05:00:00\n2023-11-02 06:00:00\n13.8\n9\nNOX\nFond\nUrbaine\n\n\n987\nMONTPELLIER\n2023-11-02 05:00:00\n2023-11-02 06:00:00\n6.6\n9\nNOX\nFond\nUrbaine\n\n\n\n\n278 rows × 8 columns\n\n\n\n\ndf_j[(df_j['city']=='MONTPELLIER')&(df['nom_poll']=='NOX')].sort_values(by='start')\n#df[(df['city']=='MONTPELLIER')&(df['nom_poll']=='NOX')].sort_values(by='start')\n\n\n\n\n\n\n\n\ncity\nstart\nend\nvalues\npoll_ue\nnom_poll\ninfluence\ntypology\n\n\n\n\n924\nMONTPELLIER\n2023-11-02 04:00:00\n2023-11-02 05:00:00\n6.8\n8\nNO2\nTrafic\nUrbaine\n\n\n987\nMONTPELLIER\n2023-11-02 05:00:00\n2023-11-02 06:00:00\n6.6\n9\nNOX\nFond\nUrbaine\n\n\n986\nMONTPELLIER\n2023-11-02 05:00:00\n2023-11-02 06:00:00\n13.8\n9\nNOX\nFond\nUrbaine\n\n\n134\nMONTPELLIER\n2023-11-14 04:00:00\n2023-11-14 05:00:00\n72.5\n9\nNOX\nTrafic\nUrbaine\n\n\n135\nMONTPELLIER\n2023-11-14 08:00:00\n2023-11-14 09:00:00\n585.9\n9\nNOX\nTrafic\nUrbaine\n\n\n137\nMONTPELLIER\n2023-11-14 12:00:00\n2023-11-14 13:00:00\n144.4\n9\nNOX\nTrafic\nUrbaine\n\n\n139\nMONTPELLIER\n2023-11-14 14:00:00\n2023-11-14 15:00:00\n179.0\n9\nNOX\nTrafic\nUrbaine\n\n\n140\nMONTPELLIER\n2023-11-14 15:00:00\n2023-11-14 16:00:00\n188.4\n9\nNOX\nTrafic\nUrbaine\n\n\n141\nMONTPELLIER\n2023-11-14 16:00:00\n2023-11-14 17:00:00\n417.0\n9\nNOX\nTrafic\nUrbaine\n\n\n369\nMONTPELLIER\n2023-11-15 06:00:00\n2023-11-15 07:00:00\n21.3\n9\nNOX\nTrafic\nUrbaine\n\n\n376\nMONTPELLIER\n2023-11-15 22:00:00\n2023-11-15 23:00:00\n210.8\n9\nNOX\nTrafic\nUrbaine\n\n\n377\nMONTPELLIER\n2023-11-16 00:00:00\n2023-11-16 01:00:00\n66.5\n9\nNOX\nTrafic\nUrbaine\n\n\n378\nMONTPELLIER\n2023-11-16 01:00:00\n2023-11-16 02:00:00\n61.0\n9\nNOX\nTrafic\nUrbaine\n\n\n379\nMONTPELLIER\n2023-11-16 02:00:00\n2023-11-16 03:00:00\n33.2\n9\nNOX\nTrafic\nUrbaine\n\n\n372\nMONTPELLIER\n2023-11-16 09:00:00\n2023-11-16 10:00:00\n236.7\n9\nNOX\nTrafic\nUrbaine\n\n\n170\nMONTPELLIER\n2023-11-17 04:00:00\n2023-11-17 05:00:00\n12.9\n9\nNOX\nTrafic\nUrbaine\n\n\n188\nMONTPELLIER\n2023-11-17 08:00:00\n2023-11-17 09:00:00\n157.1\n9\nNOX\nTrafic\nUrbaine\n\n\n389\nMONTPELLIER\n2023-11-17 10:00:00\n2023-11-17 11:00:00\n59.0\n9\nNOX\nTrafic\nUrbaine\n\n\n382\nMONTPELLIER\n2023-11-17 16:00:00\n2023-11-17 17:00:00\n39.8\n9\nNOX\nTrafic\nUrbaine\n\n\n383\nMONTPELLIER\n2023-11-18 04:00:00\n2023-11-18 05:00:00\n30.9\n9\nNOX\nTrafic\nUrbaine\n\n\n384\nMONTPELLIER\n2023-11-18 06:00:00\n2023-11-18 07:00:00\n49.3\n9\nNOX\nTrafic\nUrbaine\n\n\n385\nMONTPELLIER\n2023-11-18 07:00:00\n2023-11-18 08:00:00\n72.5\n9\nNOX\nTrafic\nUrbaine\n\n\n386\nMONTPELLIER\n2023-11-18 08:00:00\n2023-11-18 09:00:00\n131.2\n9\nNOX\nTrafic\nUrbaine\n\n\n437\nMONTPELLIER\n2023-11-19 21:00:00\n2023-11-19 22:00:00\n206.4\n9\nNOX\nTrafic\nUrbaine\n\n\n187\nMONTPELLIER\n2023-11-20 10:00:00\n2023-11-20 11:00:00\n219.7\n9\nNOX\nTrafic\nUrbaine\n\n\n431\nMONTPELLIER\n2023-11-22 15:00:00\n2023-11-22 16:00:00\n16.1\n9\nNOX\nTrafic\nUrbaine\n\n\n450\nMONTPELLIER\n2023-11-22 18:00:00\n2023-11-22 19:00:00\n25.6\n9\nNOX\nTrafic\nUrbaine\n\n\n451\nMONTPELLIER\n2023-11-22 19:00:00\n2023-11-22 20:00:00\n25.1\n9\nNOX\nTrafic\nUrbaine\n\n\n452\nMONTPELLIER\n2023-11-23 08:00:00\n2023-11-23 09:00:00\n383.4\n9\nNOX\nTrafic\nUrbaine\n\n\n453\nMONTPELLIER\n2023-11-23 09:00:00\n2023-11-23 10:00:00\n356.1\n9\nNOX\nTrafic\nUrbaine\n\n\n445\nMONTPELLIER\n2023-11-23 21:00:00\n2023-11-23 22:00:00\n71.5\n9\nNOX\nTrafic\nUrbaine\n\n\n449\nMONTPELLIER\n2023-11-24 02:00:00\n2023-11-24 03:00:00\n52.2\n9\nNOX\nTrafic\nUrbaine\n\n\n456\nMONTPELLIER\n2023-11-24 10:00:00\n2023-11-24 11:00:00\n65.3\n9\nNOX\nTrafic\nUrbaine\n\n\n244\nMONTPELLIER\n2023-11-24 11:00:00\n2023-11-24 12:00:00\n28.3\n9\nNOX\nTrafic\nUrbaine\n\n\n246\nMONTPELLIER\n2023-11-24 13:00:00\n2023-11-24 14:00:00\n36.2\n9\nNOX\nTrafic\nUrbaine\n\n\n\n\n\n\n\n\ndf[(df['city']=='MONTPELLIER')&(df['nom_poll']=='PM2.5')].shape\n\n(14, 8)\n\n\n\ndf[(df['city']=='MONTPELLIER')&(df['nom_poll']=='PM10')].sort_values(by='start')\ndf['start'].apply(lambda x: df.loc[df['start'] == x, 'values'].mean())\n\n\ndp.get_unique_cities(df)\n\narray(['TOULOUSE', 'BESSIERES', 'ALES', 'ALBI', 'TARBES',\n       'PEYRUSSE-VIEILLE', 'AGDE', 'SAINT-GIRONS', 'LOURDES',\n       'LUNEL-VIEL', 'RODEZ', 'BLAGNAC', 'MONTAUBAN', 'CASTRES',\n       'MONTPELLIER', 'LATTES', 'NIMES', 'PERPIGNAN',\n       'SAINT-GELY-DU-FESC', 'SAZE', 'BEZIERS', 'BELESTA-EN-LAURAGAIS',\n       'MIRAMONT-DE-COMMINGES', 'MONTGISCARD', 'ARGELES-GAZOST', 'AUCH',\n       'SAINT-ESTEVE', 'LA CALMETTE'], dtype=object)\n\n\n\nviz.visualize_df(df=df_j, city='MONTPELLIER', nom_poll=\"NOX\")\n\n\n\n\n\ndef average_duplicate_timestamps(dataframe, timestamp_column, value_column):\n\n\n\n    # Group by timestamp and calculate the average value\n    averaged_df = dataframe.groupby(timestamp_column)[value_column].mean().reset_index()\n\n    return averaged_df"
  },
  {
    "objectID": "about3.html",
    "href": "about3.html",
    "title": "Votre Site sur la Pollution",
    "section": "",
    "text": "/* Styles pour le menu défilant / .navbar { background-color: #333; / Couleur de fond du menu */ overflow: hidden; }\n.navbar ul { list-style-type: none; margin: 0; padding: 0; overflow: hidden; }\n.navbar li { float: left; }\n.navbar a { display: block; color: white; text-align: center; padding: 14px 16px; text-decoration: none; }\n.navbar a:hover { background-color: #ddd; /* Couleur de fond au survol */ color: black; }\nD’accord, si vous souhaitez ajouter un menu défilant à votre site Quarto, vous devrez utiliser le langage Quarto plutôt que du HTML et du CSS purs. Voici comment vous pouvez le faire en utilisant le langage Quarto avec la syntaxe Markdown :\nCréez un fichier Quarto (par exemple, index.qmd), et ajoutez le contenu suivant :\nmarkdown Copy code\n/* Styles pour le menu défilant / .navbar { background-color: #333; / Couleur de fond du menu */ overflow: hidden; }\n.navbar ul { list-style-type: none; margin: 0; padding: 0; overflow: hidden; }\n.navbar li { float: left; }\n.navbar a { display: block; color: white; text-align: center; padding: 14px 16px; text-decoration: none; }\n.navbar a:hover { background-color: #ddd; /* Couleur de fond au survol */ color: black; } Accueil {#accueil} Contenu de votre page d’accueil.\nArticles {#articles} Contenu de la section des articles.\nPollution {#pollution} Contenu de la section sur la pollution.\nContact {#contact} Contenu de la section de contact.\nvbnet Copy code\nAssurez-vous d’ajuster le contenu des sections (Accueil, Articles, Pollution, Contact) en fonction de votre site.\nL’ajout du code CSS dans les accolades triples avec {css echo=FALSE} permet d’inclure le style directement dans le fichier Quarto. N’oubliez pas de personnaliser les styles selon vos préférences.\nEnregistrez ce fichier, puis exécutez la commande suivante dans votre terminal pour générer le site web :\n```bash"
  },
  {
    "objectID": "about.html#carte-intéractive",
    "href": "about.html#carte-intéractive",
    "title": "Intéractivité",
    "section": "Carte intéractive",
    "text": "Carte intéractive\n\n\nC:\\Users\\romeo\\anaconda3\\lib\\site-packages\\jupyter_client\\session.py:718: UserWarning:\n\nMessage serialization failed with:\nOut of range float values are not JSON compliant\nSupporting this message is deprecated in jupyter-client 7, please make sure your message is JSON-compliant\n\n\n\n\n\n\nCarte interactive des mesures mensuelles de la région Occitanie des principaux polluants en microgramme par mètre cube"
  },
  {
    "objectID": "about.html#résultats-moyenne-écart-type-valeur-max",
    "href": "about.html#résultats-moyenne-écart-type-valeur-max",
    "title": "Intéractivité",
    "section": "Résultats moyenne, écart type, valeur max",
    "text": "Résultats moyenne, écart type, valeur max\n\n\nMoyenne de la pollution: 23.731417458945568\nÉcart type de la pollution: 25.289153037830907\nValeur la plus élevée: 74.30972353460739"
  },
  {
    "objectID": "index.html#titre-1",
    "href": "index.html#titre-1",
    "title": "Pollution en Occitanie",
    "section": "",
    "text": "Voici une page web qui nous en apprendra sur le lien entre les conditions météorologiques et la pollution :\n\nDispersion des polluants : Les conditions météorologiques, particulièrement la vitesse et la direction du vent, jouent un rôle essentiel dans la dispersion des polluants atmosphériques. Un vent fort peut disperser la pollution sur une grande surface, tandis qu’un vent faible peut entraîner l’accumulation de polluants près de leur source, aggravant ainsi la qualité de l’air.\nInversion thermique : L’inversion thermique, un phénomène météorologique, se produit lorsque l’air plus chaud reste piégé au-dessus de l’air plus froid, empêchant ainsi la montée des polluants. Cela peut entraîner une accumulation de pollution de l’air, surtout dans les zones urbaines.\nPrécipitations : Les précipitations, comme la pluie et la neige, nettoient l’air en entraînant les polluants vers le sol. Ainsi, après une période de précipitations, l’air tend à être plus propre.\nTempérature et réactions chimiques : Les réactions chimiques qui se produisent dans l’atmosphère, notamment la formation de smog, sont souvent influencées par la température. Les jours chauds et ensoleillés peuvent favoriser la formation de polluants photochimiques, tels que l’ozone troposphérique.\nFacteurs climatiques : Les phénomènes climatiques à long terme, comme les changements climatiques, peuvent aussi affecter la qualité de l’air. Des températures plus élevées peuvent favoriser la formation d’ozone troposphérique, un polluant atmosphérique nocif.\n\nEn résumé, les conditions météorologiques peuvent influencer la dispersion, l’accumulation et la formation de polluants atmosphériques, ce qui a un impact direct sur la qualité de l’air.\nExemple : \n\n\n\nPourcentage de pollution de 5 principaux polluants pour chaque département"
  },
  {
    "objectID": "index.html#meteo-vs-pollution",
    "href": "index.html#meteo-vs-pollution",
    "title": "Pollution en Occitanie",
    "section": "Meteo vs Pollution",
    "text": "Meteo vs Pollution\nVoici une page web qui nous en apprendra sur le lien entre les conditions météorologiques et la pollution :\n\nDispersion des polluants : Les conditions météorologiques, particulièrement la vitesse et la direction du vent, jouent un rôle essentiel dans la dispersion des polluants atmosphériques. Un vent fort peut disperser la pollution sur une grande surface, tandis qu’un vent faible peut entraîner l’accumulation de polluants près de leur source, aggravant ainsi la qualité de l’air.\nInversion thermique : L’inversion thermique, un phénomène météorologique, se produit lorsque l’air plus chaud reste piégé au-dessus de l’air plus froid, empêchant ainsi la montée des polluants. Cela peut entraîner une accumulation de pollution de l’air, surtout dans les zones urbaines.\nPrécipitations : Les précipitations, comme la pluie et la neige, nettoient l’air en entraînant les polluants vers le sol. Ainsi, après une période de précipitations, l’air tend à être plus propre.\nTempérature et réactions chimiques : Les réactions chimiques qui se produisent dans l’atmosphère, notamment la formation de smog, sont souvent influencées par la température. Les jours chauds et ensoleillés peuvent favoriser la formation de polluants photochimiques, tels que l’ozone troposphérique.\nFacteurs climatiques : Les phénomènes climatiques à long terme, comme les changements climatiques, peuvent aussi affecter la qualité de l’air. Des températures plus élevées peuvent favoriser la formation d’ozone troposphérique, un polluant atmosphérique nocif.\n\nEn résumé, les conditions météorologiques peuvent influencer la dispersion, l’accumulation et la formation de polluants atmosphériques, ce qui a un impact direct sur la qualité de l’air.\nExemple : \n\n\n\nPourcentage de pollution de 5 principaux polluants pour chaque département"
  },
  {
    "objectID": "Toulouse.html",
    "href": "Toulouse.html",
    "title": "Toulouse",
    "section": "",
    "text": "Toulouse, la ville rose\n\n\n\nNombres d’habitants : 471 945\nDensité : 4 209,7 (nombre d’habitants au \\(km^2\\))\nDépartement : Haute-Garonne (31)\n\n\nOn peut observer une très forte décroissance de la pollution totale de 2019 à 2020, surement lié à l’épidémie de la COVID 19, puis une augmentation de 2020 à 2021 et une décroissance jusqu’à 2023.\n\nUtilisation des graphiques :\n\nPour utiliser les graphiques à leurs plein potentiels il suffit de cocher les polluants qui nous intéresse sur la légende.\n\n\n\n\n                                                \n\n\n\n\n\n                                                \n\n\nD’après le Ministère de la Transition écologique et de la cohésion des territoires le seuil critique du polluant NOX est de 200 \\(\\mu.m^{-3}\\). Ainsi on peut voir qu’en 2018 et 2019 le seuil est quasiment atteint."
  },
  {
    "objectID": "Montpellier.html",
    "href": "Montpellier.html",
    "title": "Montpellier",
    "section": "",
    "text": "Montpellier\n\n\n\nNombres d’habitants : 277 639\nDensité : 5 258,4 (nombre d’habitants au \\(km^2\\))\nDépartement : Hérault (34)\n\n\n\n\n                                                \n\n\n#Visualisation de tous les polluants :"
  },
  {
    "objectID": "Perpignan.html",
    "href": "Perpignan.html",
    "title": "Perpignan",
    "section": "",
    "text": "Perpignan\n\n\n\nNombres d’habitants : 277 639\nDensité : 5 258,4 (nombre d’habitants au \\(km^2\\))\nDépartement : Pyrénées-Orientales (34)"
  },
  {
    "objectID": "Agde.html",
    "href": "Agde.html",
    "title": "Agde",
    "section": "",
    "text": "Agde\n\n\n\nNombres d’habitants : 26 946\nDensité : 574,7 (nombre d’habitants au \\(km^2\\))\nDépartement : Hérault (34)\n\n\n\n\n                                                \n\n\nLe polluant le plus important est l’\\(O_3\\). Au fil des années on peut s’apercevoir qu’il n’y a pas de grosses variations excepté une légère baisse pendant la période de l’épidémie de la COVID 19.\nDonnées récentes sur la pollition NOX à Agde\nDonnées mensuelles sur la pollition NOX à Agde"
  },
  {
    "objectID": "about4.html",
    "href": "about4.html",
    "title": "Classement général",
    "section": "",
    "text": "Voici le classement général de la ville la plus polluée en Occitanie :\n\n\n\n    \n    \n    \n    About Page"
  },
  {
    "objectID": "Montauban.html",
    "href": "Montauban.html",
    "title": "Montauban",
    "section": "",
    "text": "Montauban\n\n\n\nNombres d’habitants : 59 982\nDensité : 456,3 (nombre d’habitants au \\(km^2\\))\nDépartement : Tarn-et-Garonne (82)"
  },
  {
    "objectID": "Lourdes.html",
    "href": "Lourdes.html",
    "title": "Lourdes",
    "section": "",
    "text": "Lourdes\n\n\n\nNombres d’habitants : 13 946\nDensité : 348,6 (nombre d’habitants au \\(km^2\\))\nDépartement : Haute-Pyrénées (65)\n\nDonnées récentes sur la pollition à Lourdes :"
  },
  {
    "objectID": "Montauban.html#slide-title",
    "href": "Montauban.html#slide-title",
    "title": "Montauban",
    "section": "",
    "text": "Montauban\n\n\n\nNombres d’habitants : 59 982\nDensité : 456,3 (nombre d’habitants au \\(km^2\\))\nDépartement : Tarn-et-Garonne (82)"
  },
  {
    "objectID": "Nimes.html",
    "href": "Nimes.html",
    "title": "Nîmes",
    "section": "",
    "text": "Nombres d’habitants :\nDensité : (nombre d’habitants au \\(km^2\\))\nDépartement : Gard (30)"
  },
  {
    "objectID": "Albi.html",
    "href": "Albi.html",
    "title": "Albi",
    "section": "",
    "text": "Nombres d’habitants : 49 094\nDensité : 1 109 (nombre d’habitants au \\(km^2\\))\nDépartement : Tarn (81)"
  },
  {
    "objectID": "Lattes.html",
    "href": "Lattes.html",
    "title": "Lattes",
    "section": "",
    "text": "Nombres d’habitants : 16 298\nDensité : 635,2 (nombre d’habitants au \\(km^2\\))\nDépartement : Hérault (34)"
  },
  {
    "objectID": "Beziers.html",
    "href": "Beziers.html",
    "title": "Beziers",
    "section": "",
    "text": "Nombres d’habitants : 78 683\nDensité : 824 (nombre d’habitants au \\(km^2\\))\nDépartement : Herault (34)"
  },
  {
    "objectID": "about.html#cartes-intéractives",
    "href": "about.html#cartes-intéractives",
    "title": "Intéractivité",
    "section": "",
    "text": "Carte pour se donner une idée du nombre d’habitant et de la densité.\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\nEn passant la souris sur les différents pointeurs on a le taux moyen de pollution des 5 principaux polluants.\n\n\nC:\\Users\\romeo\\anaconda3\\lib\\site-packages\\jupyter_client\\session.py:718: UserWarning:\n\nMessage serialization failed with:\nOut of range float values are not JSON compliant\nSupporting this message is deprecated in jupyter-client 7, please make sure your message is JSON-compliant\n\n\n\n\n\n\nCarte interactive des mesures mensuelles de la région Occitanie des principaux polluants en microgramme par mètre cube"
  },
  {
    "objectID": "Villes/Agde.html",
    "href": "Villes/Agde.html",
    "title": "Agde",
    "section": "",
    "text": "Agde\n\n\n\nNombres d’habitants : 26 946\nDensité : 574,7 (nombre d’habitants au \\(km^2\\))\nDépartement : Hérault (34)\n\n\n\n\n                                                \n\n\nLe polluant le plus important est l’\\(O_3\\). Au fil des années on peut s’apercevoir qu’il n’y a pas de grosses variations excepté une légère baisse pendant la période de l’épidémie de la COVID 19.\nDonnées récentes sur la pollition NOX à Agde\nDonnées mensuelles sur la pollition NOX à Agde"
  },
  {
    "objectID": "Villes/Albi.html",
    "href": "Villes/Albi.html",
    "title": "Albi",
    "section": "",
    "text": "Nombres d’habitants : 49 094\nDensité : 1 109 (nombre d’habitants au \\(km^2\\))\nDépartement : Tarn (81)"
  },
  {
    "objectID": "Villes/Beziers.html",
    "href": "Villes/Beziers.html",
    "title": "Beziers",
    "section": "",
    "text": "Nombres d’habitants : 78 683\nDensité : 824 (nombre d’habitants au \\(km^2\\))\nDépartement : Herault (34)"
  },
  {
    "objectID": "Villes/Lattes.html",
    "href": "Villes/Lattes.html",
    "title": "Lattes",
    "section": "",
    "text": "Nombres d’habitants : 16 298\nDensité : 635,2 (nombre d’habitants au \\(km^2\\))\nDépartement : Hérault (34)\n\nDonnées récentes sur la pollition NOX à Lattes"
  },
  {
    "objectID": "Villes/Lourdes.html",
    "href": "Villes/Lourdes.html",
    "title": "Lourdes",
    "section": "",
    "text": "Lourdes\n\n\n\nNombres d’habitants : 13 946\nDensité : 348,6 (nombre d’habitants au \\(km^2\\))\nDépartement : Haute-Pyrénées (65)\n\nDonnées récentes sur la pollition NOX à Lourdes"
  },
  {
    "objectID": "Villes/Montauban.html",
    "href": "Villes/Montauban.html",
    "title": "Montauban",
    "section": "",
    "text": "Montauban\n\n\n\nNombres d’habitants : 59 982\nDensité : 456,3 (nombre d’habitants au \\(km^2\\))\nDépartement : Tarn-et-Garonne (82)"
  },
  {
    "objectID": "Villes/Montpellier.html",
    "href": "Villes/Montpellier.html",
    "title": "Montpellier",
    "section": "",
    "text": "Montpellier\n\n\n\nNombres d’habitants : 277 639\nDensité : 5 258,4 (nombre d’habitants au \\(km^2\\))\nDépartement : Hérault (34)"
  },
  {
    "objectID": "Villes/Nimes.html",
    "href": "Villes/Nimes.html",
    "title": "Nîmes",
    "section": "",
    "text": "Nombres d’habitants :\nDensité : (nombre d’habitants au \\(km^2\\))\nDépartement : Gard (30)\n\nDonnées récentes sur la pollition NOX à Nîmes"
  },
  {
    "objectID": "Villes/Perpignan.html",
    "href": "Villes/Perpignan.html",
    "title": "Perpignan",
    "section": "",
    "text": "Perpignan\n\n\n\nNombres d’habitants : 277 639\nDensité : 5 258,4 (nombre d’habitants au \\(km^2\\))\nDépartement : Pyrénées-Orientales (34)"
  },
  {
    "objectID": "Villes/Rodez.html",
    "href": "Villes/Rodez.html",
    "title": "Rodez",
    "section": "",
    "text": "Nombres d’habitants : 24 397\nDensité : 2 182 (nombre d’habitants au \\(km^2\\))\nDépartement : Aveyron (12)"
  },
  {
    "objectID": "Villes/Toulouse.html",
    "href": "Villes/Toulouse.html",
    "title": "Toulouse",
    "section": "",
    "text": "Toulouse, la ville rose\n\n\n\nNombres d’habitants : 471 945\nDensité : 4 209,7 (nombre d’habitants au \\(km^2\\))\nDépartement : Haute-Garonne (31)\n\n\nOn peut observer une très forte décroissance de la pollution totale de 2019 à 2020, surement lié à l’épidémie de la COVID 19, puis une augmentation de 2020 à 2021 et une décroissance jusqu’à 2023.\n\nUtilisation des graphiques :\n\nPour utiliser les graphiques à leurs plein potentiels il suffit de cocher les polluants qui nous intéresse sur la légende.\n\n\n\n\n                                                \n\n\n\n\n\n                                                \n\n\nD’après le Ministère de la Transition écologique et de la cohésion des territoires le seuil critique du polluant NOX est de 200 \\(\\mu.m^{-3}\\). Ainsi on peut voir qu’en 2018 et 2019 le seuil est quasiment atteint."
  },
  {
    "objectID": "Rodez.html",
    "href": "Rodez.html",
    "title": "Rodez",
    "section": "",
    "text": "Nombres d’habitants : 24 397\nDensité : 2 182 (nombre d’habitants au \\(km^2\\))\nDépartement : Aveyron (12)"
  }
]